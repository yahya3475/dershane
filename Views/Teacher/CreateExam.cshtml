@model CreateExamVM
@{
    ViewData["Title"] = "Sƒ±nav Olu≈ütur";
}

<div class="exam-builder container-xxl py-4">
    <!-- Hero Ba≈ülƒ±k -->
    <div class="card hero-card shadow-lg border-0 mb-4">
        <div class="card-body d-flex flex-column flex-lg-row align-items-center justify-content-between gap-3 p-4 p-lg-5">
            <div class="d-flex align-items-center gap-3">
                <div class="hero-icon">üìù</div>
                <div>
                    <h1 class="hero-title mb-1">Sƒ±nav Olu≈ütur</h1>
                    <p class="hero-subtitle mb-0">Ders, tarih ve s√ºreyi belirleyin; sorularƒ± ekleyin veya yapay zeka ile √ºretin.</p>
                </div>
            </div>
            <div class="text-center text-lg-end">
                <div class="badge bg-primary-subtle text-primary-emphasis rounded-pill px-3 py-2 fw-semibold">
                    <i class="bi bi-clipboard-data me-2"></i>Yeni Sƒ±nav Tanƒ±mla
                </div>
            </div>
        </div>
    </div>

    <!-- Sƒ±nav Formu -->
    <div class="card shadow-sm border-0">
        <div class="card-body p-4 p-lg-5">
            <form asp-action="CreateExam" method="post" id="examForm">
                @Html.AntiForgeryToken()

                <div class="row g-3 mb-3">
                    <div class="col-md-6">
                        <label class="form-label fw-semibold">Sƒ±nav Ba≈ülƒ±ƒüƒ±</label>
                        <input asp-for="Title" class="form-control" placeholder="√ñrn: Matematik Ara Sƒ±navƒ±" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-semibold">Ders</label>
                        <select asp-for="Lesson" asp-items="Model.Lessons" class="form-select" id="lessonSelect">
                            <option value="">Ders Se√ßin</option>
                        </select>
                        <span asp-validation-for="Lesson" class="text-danger"></span>
                    </div>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-semibold">A√ßƒ±klama</label>
                    <textarea asp-for="Description" class="form-control" rows="3" placeholder="Sƒ±nav a√ßƒ±klamasƒ±..."></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <div class="row g-3 mb-4">
                    <div class="col-md-6">
                        <label class="form-label fw-semibold">Sƒ±nav Tarihi</label>
                        <input asp-for="ExamDate" type="datetime-local" class="form-control" />
                        <span asp-validation-for="ExamDate" class="text-danger"></span>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-semibold">S√ºre (dakika)</label>
                        <input asp-for="Duration" type="number" class="form-control" min="1" max="300" />
                        <span asp-validation-for="Duration" class="text-danger"></span>
                    </div>
                </div>

                <hr class="my-4">
                <div class="d-flex align-items-center justify-content-between mb-3">
                    <h4 class="section-title mb-0"><i class="bi bi-journal-text me-2 text-primary"></i>Sorular</h4>
                </div>

                <!-- Yapay Zeka ile Soru √úret -->
                <div class="card mb-4 ai-card border-info">
                    <div class="card-header bg-info text-white d-flex align-items-center">
                        <i class="bi bi-robot me-2"></i>
                        <h5 class="mb-0">Yapay Zeka ile Soru √úret</h5>
                    </div>
                    <div class="card-body">
                        <div class="row g-3 align-items-end">
                            <div class="col-lg-8">
                                <label class="form-label">Konu / Ba≈ülƒ±k</label>
                                <input type="text" id="aiTopic" class="form-control" placeholder="√ñrn: Matematik - T√ºrev, Tarih - Osmanlƒ±, Fizik - Hareket" />
                                <small class="text-muted">Yapay zekanƒ±n soru √ºreteceƒüi spesifik konuyu yazƒ±n</small>
                            </div>
                            <div class="col-6 col-lg-2">
                                <label class="form-label">Soru Sayƒ±sƒ±</label>
                                <input type="number" id="aiQuestionCount" class="form-control" min="1" max="10" value="3" />
                            </div>
                            <div class="col-6 col-lg-2">
                                <label class="form-label">Zorluk</label>
                                <select id="aiDifficulty" class="form-select">
                                    <option value="easy">Kolay</option>
                                    <option value="medium" selected>Orta</option>
                                    <option value="hard">Zor</option>
                                </select>
                            </div>
                        </div>
                        <div class="mt-3">
                            <button type="button" class="btn btn-info" onclick="generateAIQuestions()" id="generateBtn">
                                <i class="bi bi-stars"></i> Sorularƒ± √úret
                            </button>
                            <div id="aiLoadingSpinner" class="spinner-border spinner-border-sm ms-2 d-none" role="status">
                                <span class="visually-hidden">Y√ºkleniyor...</span>
                            </div>
                        </div>
                        <div id="aiErrorMessage" class="alert alert-danger mt-3 d-none"></div>
                    </div>
                </div>

                <div id="questionsContainer">
                    @for (int i = 0; i < Model.Questions.Count; i++)
                    {
                        <div class="question-block border rounded p-3 mb-3 bg-dark">
                            <h6 class="text-success mb-3">Soru @(i + 1)</h6>
                            <div class="mb-3">
                                <label class="form-label">Soru Metni</label>
                                <textarea asp-for="Questions[i].QuestionText" class="form-control" rows="2"></textarea>
                                <span asp-validation-for="Questions[i].QuestionText" class="text-danger"></span>
                            </div>

                            <div class="row g-3">
                                <div class="col-md-6">
                                    <label class="form-label">Se√ßenek A</label>
                                    <input asp-for="Questions[i].OptionA" class="form-control" />
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Se√ßenek B</label>
                                    <input asp-for="Questions[i].OptionB" class="form-control" />
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Se√ßenek C</label>
                                    <input asp-for="Questions[i].OptionC" class="form-control" />
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Se√ßenek D</label>
                                    <input asp-for="Questions[i].OptionD" class="form-control" />
                                </div>
                            </div>

                            <div class="row g-3 mt-1">
                                <div class="col-md-6">
                                    <label class="form-label">Doƒüru Cevap</label>
                                    <select asp-for="Questions[i].CorrectAnswer" class="form-select">
                                        <option value="">Se√ßin</option>
                                        <option value="A">A</option>
                                        <option value="B">B</option>
                                        <option value="C">C</option>
                                        <option value="D">D</option>
                                    </select>
                                </div>
                                <div class="col-md-6">
                                    <label class="form-label">Puan</label>
                                    <input asp-for="Questions[i].Points" type="number" class="form-control" min="1" max="100" value="5" />
                                </div>
                            </div>

                            <div class="mt-3 d-flex justify-content-end">
                                <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeQuestion(this)">
                                    <i class="bi bi-trash"></i> Soruyu Sil
                                </button>
                            </div>
                        </div>
                    }
                </div>

                <div class="text-center mb-4">
                    <button type="button" class="btn btn-outline-primary" onclick="addQuestion()">
                        <i class="bi bi-plus-circle"></i> Manuel Soru Ekle
                    </button>
                </div>

                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary btn-lg">
                        <i class="bi bi-check-lg"></i> Sƒ±navƒ± Olu≈ütur
                    </button>
                    <a asp-action="ViewExamSystem" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Sƒ±navlara D√∂n
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
function addQuestion() {
    const container = document.getElementById('questionsContainer');
    const currentIndex = document.querySelectorAll('.question-block').length;

    const questionHtml = `
        <div class="question-block border rounded p-3 mb-3 bg-dark">
            <h6 class="text-success mb-3">Soru ${currentIndex + 1}</h6>
            <div class="mb-3">
                <label class="form-label">Soru Metni</label>
                <textarea name="Questions[${currentIndex}].QuestionText" class="form-control" rows="2"></textarea>
            </div>
            <div class="row g-3">
                <div class="col-md-6">
                    <label class="form-label">Se√ßenek A</label>
                    <input name="Questions[${currentIndex}].OptionA" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label class="form-label">Se√ßenek B</label>
                    <input name="Questions[${currentIndex}].OptionB" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label class="form-label">Se√ßenek C</label>
                    <input name="Questions[${currentIndex}].OptionC" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label class="form-label">Se√ßenek D</label>
                    <input name="Questions[${currentIndex}].OptionD" class="form-control" />
                </div>
            </div>
            <div class="row g-3 mt-1">
                <div class="col-md-6">
                    <label class="form-label">Doƒüru Cevap</label>
                    <select name="Questions[${currentIndex}].CorrectAnswer" class="form-select">
                        <option value="">Se√ßin</option>
                        <option value="A">A</option>
                        <option value="B">B</option>
                        <option value="C">C</option>
                        <option value="D">D</option>
                    </select>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Puan</label>
                    <input name="Questions[${currentIndex}].Points" type="number" class="form-control" min="1" max="100" value="5" />
                </div>
            </div>
            <div class="mt-3 d-flex justify-content-end">
                <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeQuestion(this)">
                    <i class="bi bi-trash"></i> Soruyu Sil
                </button>
            </div>
        </div>
    `;

    container.insertAdjacentHTML('beforeend', questionHtml);
}

function removeQuestion(button) {
    button.closest('.question-block').remove();
    reindexQuestions();
}

function reindexQuestions() {
    const questionBlocks = document.querySelectorAll('.question-block');

    questionBlocks.forEach((block, index) => {
        const title = block.querySelector('h6');
        if (title.textContent.includes('AI')) {
            title.textContent = `ü§ñ Yapay Zeka Sorusu ${index + 1}`;
        } else {
            title.textContent = `Soru ${index + 1}`;
        }

        const inputs = block.querySelectorAll('input, textarea, select');
        inputs.forEach(input => {
            const name = input.getAttribute('name');
            if (name && name.includes('Questions[')) {
                const newName = name.replace(/Questions\[\d+\]/, `Questions[${index}]`);
                input.setAttribute('name', newName);

                const id = input.getAttribute('id');
                if (id && id.includes('Questions_')) {
                    const newId = id.replace(/Questions_\d+_/, `Questions_${index}_`);
                    input.setAttribute('id', newId);
                }
            }
        });
    });
}

function addAIGeneratedQuestion(question) {
    const container = document.getElementById('questionsContainer');
    const currentIndex = document.querySelectorAll('.question-block').length;

    const questionHtml = `
        <div class="question-block border rounded p-3 mb-3 bg-dark border-info">
            <h6 class="text-info mb-3">ü§ñ Yapay Zeka Sorusu ${currentIndex + 1}</h6>
            <div class="mb-3">
                <label class="form-label">Soru Metni</label>
                <textarea name="Questions[${currentIndex}].QuestionText" class="form-control" rows="2">${question.questionText}</textarea>
            </div>
            <div class="row g-3">
                <div class="col-md-6">
                    <label class="form-label">Se√ßenek A</label>
                    <input name="Questions[${currentIndex}].OptionA" class="form-control" value="${question.optionA}" />
                </div>
                <div class="col-md-6">
                    <label class="form-label">Se√ßenek B</label>
                    <input name="Questions[${currentIndex}].OptionB" class="form-control" value="${question.optionB}" />
                </div>
                <div class="col-md-6">
                    <label class="form-label">Se√ßenek C</label>
                    <input name="Questions[${currentIndex}].OptionC" class="form-control" value="${question.optionC}" />
                </div>
                <div class="col-md-6">
                    <label class="form-label">Se√ßenek D</label>
                    <input name="Questions[${currentIndex}].OptionD" class="form-control" value="${question.optionD}" />
                </div>
            </div>
            <div class="row g-3 mt-1">
                <div class="col-md-6">
                    <label class="form-label">Doƒüru Cevap</label>
                    <select name="Questions[${currentIndex}].CorrectAnswer" class="form-select">
                        <option value="">Se√ßin</option>
                        <option value="A" ${question.correctAnswer === 'A' ? 'selected' : ''}>A</option>
                        <option value="B" ${question.correctAnswer === 'B' ? 'selected' : ''}>B</option>
                        <option value="C" ${question.correctAnswer === 'C' ? 'selected' : ''}>C</option>
                        <option value="D" ${question.correctAnswer === 'D' ? 'selected' : ''}>D</option>
                    </select>
                </div>
                <div class="col-md-6">
                    <label class="form-label">Puan</label>
                    <input name="Questions[${currentIndex}].Points" type="number" class="form-control" min="1" max="100" value="${question.points || 5}" />
                </div>
            </div>
            <div class="mt-3 d-flex justify-content-end">
                <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeQuestion(this)">
                    <i class="bi bi-trash"></i> Soruyu Sil
                </button>
            </div>
        </div>
    `;

    container.insertAdjacentHTML('beforeend', questionHtml);
}

async function generateAIQuestions() {
    const topic = document.getElementById('aiTopic').value.trim();
    const count = document.getElementById('aiQuestionCount').value;
    const difficulty = document.getElementById('aiDifficulty').value;
    const lesson = document.querySelector('select[name="Lesson"]').value;

    if (!topic) {
        showAIError('Yapay zeka i√ßin bir konu girin.');
        return;
    }
    if (!lesson) {
        showAIError('√ñnce bir ders se√ßmelisiniz!');
        return;
    }

    const generateBtn = document.getElementById('generateBtn');
    const spinner = document.getElementById('aiLoadingSpinner');
    const errorDiv = document.getElementById('aiErrorMessage');

    generateBtn.disabled = true;
    spinner.classList.remove('d-none');
    errorDiv.classList.add('d-none');

    try {
        const response = await fetch('/Teacher/GenerateAIQuestions', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify({
                topic: topic,
                lesson: lesson,
                count: parseInt(count),
                difficulty: difficulty
            })
        });

        if (!response.ok) {
            throw new Error('Soru √ºretme isteƒüi ba≈üarƒ±sƒ±z.');
        }

        const data = await response.json();

        if (data.success) {
            data.questions.forEach(q => addAIGeneratedQuestion(q));
            document.getElementById('aiTopic').value = '';
            showAISuccess(`${data.questions.length} soru eklendi! üéâ`);
            reindexQuestions();
        } else {
            showAIError(data.message || 'Soru √ºretme ba≈üarƒ±sƒ±z.');
        }
    } catch (error) {
        showAIError('Soru √ºretilirken hata olu≈ütu. L√ºtfen tekrar deneyin.');
    } finally {
        generateBtn.disabled = false;
        spinner.classList.add('d-none');
    }
}

document.getElementById('examForm').addEventListener('submit', function (e) {
    reindexQuestions();
});

function showAIError(message) {
    const errorDiv = document.getElementById('aiErrorMessage');
    errorDiv.textContent = message;
    errorDiv.classList.remove('d-none');
    setTimeout(() => errorDiv.classList.add('d-none'), 5000);
}

function showAISuccess(message) {
    const successDiv = document.createElement('div');
    successDiv.className = 'alert alert-success mt-3';
    successDiv.textContent = message;
    const aiCard = document.querySelector('.ai-card .card-body');
    aiCard.appendChild(successDiv);
    setTimeout(() => successDiv.remove(), 3000);
}

// Sayfa y√ºklendiƒüinde mevcut sorularƒ± indeksle
document.addEventListener('DOMContentLoaded', function () {
    reindexQuestions();
});
</script>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#examForm').on('submit', function (e) {
                const questionBlocks = document.querySelectorAll('.question-block');
                if (questionBlocks.length === 0) {
                    e.preventDefault();
                    alert('En az bir soru eklemelisiniz!');
                    return false;
                }
                let hasEmpty = false;
                questionBlocks.forEach((block) => {
                    const questionText = block.querySelector('textarea[name*="QuestionText"]').value.trim();
                    const optionA = block.querySelector('input[name*="OptionA"]').value.trim();
                    const optionB = block.querySelector('input[name*="OptionB"]').value.trim();
                    const optionC = block.querySelector('input[name*="OptionC"]').value.trim();
                    const optionD = block.querySelector('input[name*="OptionD"]').value.trim();
                    const correctAnswer = block.querySelector('select[name*="CorrectAnswer"]').value;
                    if (!questionText || !optionA || !optionB || !optionC || !optionD || !correctAnswer) {
                        hasEmpty = true;
                    }
                });
                if (hasEmpty) {
                    e.preventDefault();
                    alert('L√ºtfen t√ºm soru alanlarƒ±nƒ± doldurun!');
                    return false;
                }
                reindexQuestions();
                return true;
            });

            $('select[name="Lesson"]').on('change', function () {
                $('#aiTopic').val('');
            });

            $('#aiTopic').on('keypress', function (e) {
                if (e.which === 13) {
                    e.preventDefault();
                    generateAIQuestions();
                }
            });
        });
    </script>
}

@section Styles {
    <style>
        .exam-builder .card {
            background: rgba(30, 30, 46, 0.9);
            border: 1px solid rgba(255, 255, 255, 0.08) !important;
            border-radius: 16px;
            color: rgba(255, 255, 255, 0.95);
        }
        .hero-card { background: linear-gradient(135deg, rgba(99,102,241,0.15), rgba(30,30,46,0.9)); }
        .hero-icon {
            width: 64px; height: 64px; display: grid; place-items: center; font-size: 2rem;
            border-radius: 14px; background: linear-gradient(135deg, rgba(99,102,241,0.25), rgba(139,92,246,0.2));
            box-shadow: 0 10px 25px rgba(0,0,0,0.2);
        }
        .hero-title { font-weight: 800; letter-spacing: .3px; }
        .hero-subtitle { color: rgba(255, 255, 255, 0.75); }

        .section-title { font-weight: 700; }

        .ai-card .card-header { border-bottom: 0; }
        .question-block {
            border: 1px solid rgba(255,255,255,.08) !important;
            background: rgba(17, 17, 27, 0.6) !important;
            border-radius: 12px;
        }
        .form-control, .form-select {
            background: rgba(255,255,255,.06);
            border: 1px solid rgba(255,255,255,.1);
            color: #fff;
        }
        .form-control::placeholder { color: rgba(255,255,255,.6); }
        .form-control:focus, .form-select:focus {
            border-color: rgba(99,102,241,.4);
            box-shadow: 0 0 0 .2rem rgba(99,102,241,.15);
        }

        .btn.btn-primary { background: linear-gradient(45deg, #667eea 0%, #764ba2 100%); border: none; }
        .btn.btn-primary:hover { filter: brightness(1.05); }

        .table-gradient th { background: linear-gradient(90deg, rgba(99,102,241,.25), rgba(139,92,246,.2)); border: 0; }

        @@media (max-width: 576px) {
            .hero-title { font-size: 1.6rem; }
            .hero-icon { width: 52px; height: 52px; font-size: 1.6rem; }
        }
    </style>
}