@using System.Linq
@model List<dershane.ViewModels.AttendanceReportVM>
@{
    ViewData["Title"] = "Yoklama RaporlarÄ±";
}

<div class="attendance-reports-wrapper container-xxl py-4">
    <!-- Hero BaÅŸlÄ±k -->
    <div class="card hero-card shadow-lg border-0 mb-4">
        <div class="card-body d-flex flex-column flex-lg-row align-items-center justify-content-between gap-3 p-4 p-lg-5">
            <div class="d-flex align-items-center gap-3">
                <div class="hero-icon">ðŸ“Š</div>
                <div>
                    <h1 class="hero-title mb-1">Yoklama RaporlarÄ±</h1>
                    <p class="hero-subtitle mb-0">Ã–ÄŸrenci devam durumlarÄ±nÄ± analiz edin ve raporlayÄ±n.</p>
                </div>
            </div>
            <div class="text-center text-lg-end">
                @if (Model != null && Model.Any())
                {
                    <button type="button" class="btn btn-primary btn-sm" onclick="exportToExcel()">
                        <i class="bi bi-file-earmark-excel me-2"></i>Excel'e Aktar
                    </button>
                }
            </div>
        </div>
    </div>

    <!-- Filtre KartÄ± -->
    <div class="card shadow-sm border-0 mb-4">
        <div class="card-header bg-transparent">
            <h5 class="mb-0"><i class="bi bi-funnel me-2 text-primary"></i>Filtreler</h5>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-3">
                    <label for="lessonFilter" class="form-label fw-semibold">Ders</label>
                    <select class="form-select" id="lessonFilter">
                        <option value="">TÃ¼m Dersler</option>
                        @if (ViewBag.Lessons != null)
                        {
                            @foreach (var lesson in (List<SelectListItem>)ViewBag.Lessons)
                            {
                                @if (lesson.Selected)
                                {
                                    <option value="@lesson.Value" selected>@lesson.Text</option>
                                }
                                else
                                {
                                    <option value="@lesson.Value">@lesson.Text</option>
                                }
                            }
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="startDate" class="form-label fw-semibold">BaÅŸlangÄ±Ã§ Tarihi</label>
                    <input type="date" class="form-control" id="startDate" value="@ViewBag.StartDate">
                </div>
                <div class="col-md-3">
                    <label for="endDate" class="form-label fw-semibold">BitiÅŸ Tarihi</label>
                    <input type="date" class="form-control" id="endDate" value="@ViewBag.EndDate">
                </div>
                <div class="col-md-3">
                    <label class="form-label">&nbsp;</label>
                    <button type="button" class="btn btn-primary w-100" onclick="filterReports()">
                        <i class="bi bi-funnel me-2"></i>Filtrele
                    </button>
                </div>
            </div>
        </div>
    </div>

    @if (Model != null && Model.Any())
    {
        <!-- Ä°statistik KartlarÄ± -->
        <div class="row g-3 mb-4">
            <div class="col-6 col-md-3">
                <div class="stat-card card h-100 bg-gradient-primary">
                    <div class="card-body text-center text-white">
                        <div class="stat-icon mb-2"><i class="bi bi-calendar-check"></i></div>
                        <div class="stat-value">@Model.Count</div>
                        <div class="stat-label">Toplam KayÄ±t</div>
                    </div>
                </div>
            </div>
            <div class="col-6 col-md-3">
                <div class="stat-card card h-100 bg-gradient-success">
                    <div class="card-body text-center text-white">
                        <div class="stat-icon mb-2"><i class="bi bi-check-circle"></i></div>
                        <div class="stat-value">@Model.Count(r => r.IsPresent)</div>
                        <div class="stat-label">KatÄ±lan</div>
                    </div>
                </div>
            </div>
            <div class="col-6 col-md-3">
                <div class="stat-card card h-100 bg-gradient-danger">
                    <div class="card-body text-center text-white">
                        <div class="stat-icon mb-2"><i class="bi bi-x-circle"></i></div>
                        <div class="stat-value">@Model.Count(r => !r.IsPresent)</div>
                        <div class="stat-label">KatÄ±lmayan</div>
                    </div>
                </div>
            </div>
            <div class="col-6 col-md-3">
                <div class="stat-card card h-100 bg-gradient-info">
                    <div class="card-body text-center text-white">
                        <div class="stat-icon mb-2"><i class="bi bi-percent"></i></div>
                        <div class="stat-value">@(Model.Any() ? Math.Round((double)Model.Count(r => r.IsPresent) / Model.Count * 100, 1) : 0)%</div>
                        <div class="stat-label">KatÄ±lÄ±m OranÄ±</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Raporlar Tablosu -->
        <div class="card shadow-sm border-0">
            <div class="card-header bg-transparent d-flex align-items-center justify-content-between">
                <h5 class="mb-0"><i class="bi bi-table me-2 text-primary"></i>Yoklama KayÄ±tlarÄ±</h5>
                <span class="badge bg-primary-subtle text-primary-emphasis rounded-pill">@Model.Count kayÄ±t</span>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-dark table-hover table-borderless align-middle mb-0" id="reportsTable">
                        <thead class="table-gradient">
                            <tr>
                                <th>Tarih</th>
                                <th>Ders</th>
                                <th>Ã–ÄŸrenci No</th>
                                <th>Ã–ÄŸrenci AdÄ±</th>
                                <th>Durum</th>
                                <th>Not</th>
                            </tr>
                        </thead>
                        <tbody id="reportsTableBody">
                            @foreach (var report in Model.OrderByDescending(r => r.Date))
                            {
                                <tr>
                                    <td><span class="fw-medium">@report.Date.ToString("dd.MM.yyyy")</span></td>
                                    <td><span class="badge bg-info rounded-pill">@report.Lesson</span></td>
                                    <td><span class="fw-semibold">@report.StudentId</span></td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="bi bi-person-circle me-2 text-primary"></i>
                                            <span>@report.StudentName</span>
                                        </div>
                                    </td>
                                    <td>
                                        @if (report.IsPresent)
                                        {
                                            <span class="badge bg-success rounded-pill">
                                                <i class="bi bi-check-circle me-1"></i>KatÄ±ldÄ±
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger rounded-pill">
                                                <i class="bi bi-x-circle me-1"></i>KatÄ±lmadÄ±
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(report.Note))
                                        {
                                            <span class="text-muted">@report.Note</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted opacity-50">-</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else
    {
        <!-- BoÅŸ Durum -->
        <div class="empty-state-card card shadow-sm border-0">
            <div class="card-body text-center py-5">
                <div class="empty-icon mb-3">ðŸ“Š</div>
                <h4 class="empty-title mb-2">Yoklama KaydÄ± BulunamadÄ±</h4>
                <p class="empty-subtitle mb-4">SeÃ§ilen kriterlere uygun yoklama kaydÄ± bulunmuyor. Filtreleri deÄŸiÅŸtirmeyi deneyin.</p>
                <a asp-action="TakeAttendance" class="btn btn-primary btn-lg">
                    <i class="bi bi-plus-circle me-2"></i>Yoklama Al
                </a>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function filterReports() {
            const lesson = document.getElementById('lessonFilter').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            
            const params = new URLSearchParams();
            if (lesson) params.append('lesson', lesson);
            if (startDate) params.append('startDate', startDate);
            if (endDate) params.append('endDate', endDate);
            
            window.location.href = '/Teacher/AttendanceReports?' + params.toString();
        }

        function exportToExcel() {
            const lesson = document.getElementById('lessonFilter').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            
            const params = new URLSearchParams();
            if (lesson) params.append('lesson', lesson);
            if (startDate) params.append('startDate', startDate);
            if (endDate) params.append('endDate', endDate);
            
            // Excel export iÃ§in basit bir Ã§Ã¶zÃ¼m
            const table = document.getElementById('reportsTable');
            const wb = XLSX.utils.table_to_book(table, {sheet: "Yoklama RaporlarÄ±"});
            XLSX.writeFile(wb, `Yoklama_Raporu_${new Date().toISOString().split('T')[0]}.xlsx`);
        }

        // Excel kÃ¼tÃ¼phanesini yÃ¼kle
        if (typeof XLSX === 'undefined') {
            const script = document.createElement('script');
            script.src = 'https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js';
            document.head.appendChild(script);
        }
    </script>
}

@section Styles {
    <style>
        .attendance-reports-wrapper .card {
            background: rgba(30, 30, 46, 0.9);
            border: 1px solid rgba(255, 255, 255, 0.08) !important;
            border-radius: 16px;
            color: rgba(255, 255, 255, 0.95);
        }

        .hero-card { background: linear-gradient(135deg, rgba(99,102,241,0.15), rgba(30,30,46,0.9)); }
        .hero-icon {
            width: 64px; height: 64px; display: grid; place-items: center; font-size: 2rem;
            border-radius: 14px; background: linear-gradient(135deg, rgba(99,102,241,0.25), rgba(139,92,246,0.2));
            box-shadow: 0 10px 25px rgba(0,0,0,0.2);
        }
        .hero-title { font-weight: 800; letter-spacing: .3px; }
        .hero-subtitle { color: rgba(255, 255, 255, 0.75); }

        .stat-card { overflow: hidden; transition: transform .25s ease; }
        .stat-card:hover { transform: translateY(-4px); }
        .stat-icon { font-size: 2rem; opacity: .9; }
        .stat-value { font-size: 1.8rem; font-weight: 800; line-height: 1; }
        .stat-label { font-size: .9rem; opacity: .9; font-weight: 600; }

        .bg-gradient-primary { background: linear-gradient(45deg, #667eea 0%, #764ba2 100%); }
        .bg-gradient-success { background: linear-gradient(45deg, #56ab2f 0%, #a8e6cf 100%); }
        .bg-gradient-danger { background: linear-gradient(45deg, #ff416c 0%, #ff4b2b 100%); }
        .bg-gradient-info { background: linear-gradient(45deg, #4facfe 0%, #00f2fe 100%); }

        .form-control, .form-select {
            background: rgba(255,255,255,.06);
            border: 1px solid rgba(255,255,255,.1);
            color: #fff;
        }
        .form-control::placeholder { color: rgba(255,255,255,.6); }
        .form-control:focus, .form-select:focus {
            border-color: rgba(99,102,241,.4);
            box-shadow: 0 0 0 .2rem rgba(99,102,241,.15);
            background: rgba(255,255,255,.08);
        }

        .table-gradient th { background: linear-gradient(90deg, rgba(99,102,241,.25), rgba(139,92,246,.2)); border: 0; }
        .table td, .table th { border-color: rgba(255,255,255,.06) !important; }

        .empty-state-card { background: rgba(17, 17, 27, 0.6) !important; }
        .empty-icon { font-size: 4rem; opacity: .7; }
        .empty-title { color: rgba(255,255,255,.9); }
        .empty-subtitle { color: rgba(255,255,255,.6); }

        @@media (max-width: 576px) {
            .hero-title { font-size: 1.6rem; }
            .hero-icon { width: 52px; height: 52px; font-size: 1.6rem; }
        }
    </style>
}