@model List<ExamGroupVM>

<div class="container-fluid mt-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="display-6 fw-bold text-primary mb-2">
                        <i class="bi bi-clipboard-data me-3"></i>Exam Results Dashboard
                    </h1>
                    <p class="text-muted mb-0">Manage and review student examination performance</p>
                </div>
                <div>
                    <button class="btn btn-outline-primary me-2" onclick="exportResults()">
                        <i class="bi bi-download me-2"></i>Export
                    </button>
                    <a asp-action="CreateExam" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-2"></i>Add Results
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Stats Overview -->
    <div class="row g-3 mb-4">
        <div class="col-md-3">
            <div class="card border-0 bg-primary text-white">
                <div class="card-body text-center">
                    <i class="bi bi-journal-text display-6 mb-2 opacity-75"></i>
                    <h4 class="fw-bold">@Model.Count</h4>
                    <small class="opacity-75">Total Subjects</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 bg-success text-white">
                <div class="card-body text-center">
                    <i class="bi bi-people-fill display-6 mb-2 opacity-75"></i>
                    <h4 class="fw-bold">@Model.SelectMany(g => g.ExamResults).Count()</h4>
                    <small class="opacity-75">Total Results</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 bg-warning text-white">
                <div class="card-body text-center">
                    <i class="bi bi-trophy-fill display-6 mb-2 opacity-75"></i>
                    <h4 class="fw-bold">@Model.SelectMany(g => g.ExamResults).Where(r => r.Points >= 85).Count()</h4>
                    <small class="opacity-75">Excellent (85+)</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-0 bg-info text-white">
                <div class="card-body text-center">
                    <i class="bi bi-graph-up display-6 mb-2 opacity-75"></i>
                    <h4 class="fw-bold">@(Model.SelectMany(g => g.ExamResults).Any() ? Math.Round(Model.SelectMany(g => g.ExamResults).Average(r => r.Points), 1) : 0)</h4>
                    <small class="opacity-75">Class Average</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Exam Results by Subject -->
    @foreach (var group in Model)
    {
        <div class="card shadow-sm border-0 rounded-4 mb-4">
            <div class="card-header bg-gradient-primary text-white border-0 rounded-top-4">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h4 class="mb-1">
                            <i class="bi bi-book-fill me-2"></i>@group.Lesson
                        </h4>
                        <small class="opacity-75">
                            @group.ExamResults.Count students â€¢ 
                            Average: @(group.ExamResults.Any() ? Math.Round(group.ExamResults.Average(r => r.Points), 1) : 0)
                        </small>
                    </div>
                    <div class="dropdown">
                        <button class="btn btn-outline-light btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                            <i class="bi bi-three-dots"></i>
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#"><i class="bi bi-download me-2"></i>Export Subject</a></li>
                            <li><a class="dropdown-item" href="#"><i class="bi bi-graph-up me-2"></i>View Analytics</a></li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th class="border-0 px-4 py-3">
                                    <i class="bi bi-hash me-2 text-muted"></i>Student Number
                                </th>
                                <th class="border-0 py-3">
                                    <i class="bi bi-person me-2 text-muted"></i>Student Name
                                </th>
                                <th class="border-0 py-3">
                                    <i class="bi bi-award me-2 text-muted"></i>Score
                                </th>
                                <th class="border-0 py-3">
                                    <i class="bi bi-bar-chart me-2 text-muted"></i>Grade
                                </th>
                                <th class="border-0 py-3 text-center">
                                    <i class="bi bi-gear me-2 text-muted"></i>Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var result in group.ExamResults.OrderByDescending(r => r.Points))
                            {
                                var gradeInfo = result.Points switch
                                {
                                    >= 90 => ("A+", "success", "bi-trophy-fill"),
                                    >= 85 => ("A", "success", "bi-award-fill"),
                                    >= 80 => ("B+", "primary", "bi-star-fill"),
                                    >= 75 => ("B", "primary", "bi-star"),
                                    >= 70 => ("C+", "warning", "bi-circle-fill"),
                                    >= 65 => ("C", "warning", "bi-circle"),
                                    >= 60 => ("D+", "orange", "bi-dash-circle"),
                                    >= 50 => ("D", "orange", "bi-dash-circle"),
                                    _ => ("F", "danger", "bi-x-circle-fill")
                                };
                                
                                <tr class="align-middle">
                                    <td class="px-4 py-3">
                                        <span class="fw-semibold text-primary">@result.StudentNumber</span>
                                    </td>
                                    <td class="py-3">
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-circle bg-light me-3">
                                                <i class="bi bi-person-fill text-muted"></i>
                                            </div>
                                            <span class="fw-medium">@result.StudentName</span>
                                        </div>
                                    </td>
                                    <td class="py-3">
                                        <div class="d-flex align-items-center">
                                            <div class="progress me-3" style="width: 80px; height: 8px;">
                                                <div class="progress-bar bg-@gradeInfo.Item2" 
                                                     style="width: @result.Points%"></div>
                                            </div>
                                            <span class="fw-bold fs-5">@result.Points</span>
                                        </div>
                                    </td>
                                    <td class="py-3">
                                        <span class="badge bg-@gradeInfo.Item2 bg-gradient px-3 py-2 fs-6">
                                            <i class="bi @gradeInfo.Item3 me-1"></i>@gradeInfo.Item1
                                        </span>
                                    </td>
                                    <td class="py-3 text-center">
                                        <div class="btn-group" role="group">
                                            <a asp-action="EditExam" asp-route-nid="@result.Nid" 
                                               class="btn btn-outline-primary btn-sm" 
                                               data-bs-toggle="tooltip" title="Edit Score">
                                                <i class="bi bi-pencil-square"></i>
                                            </a>
<form asp-action="DeleteExam" asp-route-nid="@result.Nid" method="post" 
                                                  class="d-inline" 
                                                  onsubmit="return confirm('Are you sure you want to delete this exam result for @result.StudentName?');">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-outline-danger btn-sm" 
                                                        data-bs-toggle="tooltip" title="Delete">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <div class="mb-4">
                <i class="bi bi-clipboard-x display-1 text-muted"></i>
            </div>
            <h3 class="text-muted mb-3">No Exam Results Found</h3>
            <p class="text-muted mb-4">Start by adding some exam results for your students.</p>
            <a asp-action="AddExam" class="btn btn-primary btn-lg">
                <i class="bi bi-plus-circle me-2"></i>Add First Result
            </a>
        </div>
    }
</div>

<style>
.bg-gradient-primary {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
}

.avatar-circle {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.bg-orange {
    background-color: #fd7e14 !important;
}

.table-hover tbody tr:hover {
    background-color: rgba(0, 123, 255, 0.05);
}

.card {
    transition: transform 0.2s ease-in-out;
}

.card:hover {
    transform: translateY(-2px);
}
</style>

<script>
function exportResults() {
    // Export functionality
    alert('Export feature will be implemented');
}

// Initialize tooltips
document.addEventListener('DOMContentLoaded', function() {
    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl);
    });
});
</script>