@model List<ExamGroupVM>
@{
    ViewData["Title"] = "SÄ±nav SonuÃ§larÄ±";
}

<div class="view-exams-wrapper container-xxl py-4">
    <!-- Hero BaÅŸlÄ±k -->
    <div class="card hero-card shadow-lg border-0 mb-4">
        <div class="card-body d-flex flex-column flex-lg-row align-items-center justify-content-between gap-3 p-4 p-lg-5">
            <div class="d-flex align-items-center gap-3">
                <div class="hero-icon">ðŸ“‹</div>
                <div>
                    <h1 class="hero-title mb-1">SÄ±nav SonuÃ§larÄ±</h1>
                    <p class="hero-subtitle mb-0">Ã–ÄŸrenci sÄ±nav performanslarÄ±nÄ± yÃ¶netin ve inceleyin.</p>
                </div>
            </div>
            <div class="text-center text-lg-end">
                <div class="d-flex gap-2 flex-wrap">
                    <button class="btn btn-outline-light btn-sm" onclick="exportResults()">
                        <i class="bi bi-download me-2"></i>DÄ±ï¿½ï¿½a Aktar
                    </button>
                    <a asp-action="AddExam" class="btn btn-primary btn-sm">
                        <i class="bi bi-plus-circle me-2"></i>SonuÃ§ Ekle
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Ä°statistik KartlarÄ± -->
    <div class="row g-3 mb-4">
        <div class="col-6 col-md-3">
            <div class="stat-card card h-100 bg-gradient-primary">
                <div class="card-body text-center text-white">
                    <div class="stat-icon mb-2"><i class="bi bi-journal-text"></i></div>
                    <div class="stat-value">@Model.Count</div>
                    <div class="stat-label">Toplam Ders</div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="stat-card card h-100 bg-gradient-success">
                <div class="card-body text-center text-white">
                    <div class="stat-icon mb-2"><i class="bi bi-people-fill"></i></div>
                    <div class="stat-value">@Model.SelectMany(g => g.ExamResults).Count()</div>
                    <div class="stat-label">Toplam SonuÃ§</div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="stat-card card h-100 bg-gradient-warning">
                <div class="card-body text-center text-white">
                    <div class="stat-icon mb-2"><i class="bi bi-trophy-fill"></i></div>
                    <div class="stat-value">@Model.SelectMany(g => g.ExamResults).Where(r => r.Points >= 85).Count()</div>
                    <div class="stat-label">MÃ¼kemmel (85+)</div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="stat-card card h-100 bg-gradient-info">
                <div class="card-body text-center text-white">
                    <div class="stat-icon mb-2"><i class="bi bi-graph-up"></i></div>
                    <div class="stat-value">@(Model.SelectMany(g => g.ExamResults).Any() ? Math.Round(Model.SelectMany(g => g.ExamResults).Average(r => r.Points), 1) : 0)</div>
                    <div class="stat-label">SÄ±nÄ±f OrtalamasÄ±</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Ders BazÄ±nda SonuÃ§lar -->
    @foreach (var group in Model)
    {
        <div class="card shadow-sm border-0 mb-4">
            <div class="card-header bg-transparent d-flex align-items-center justify-content-between">
                <div>
                    <h5 class="mb-1"><i class="bi bi-book-fill me-2 text-primary"></i>@group.Lesson</h5>
                    <small class="text-muted">
                        @group.ExamResults.Count Ã¶ÄŸrenci â€¢ 
                        Ortalama: @(group.ExamResults.Any() ? Math.Round(group.ExamResults.Average(r => r.Points), 1) : 0)
                    </small>
                </div>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-dark table-hover table-borderless align-middle mb-0">
                        <thead class="table-gradient">
                            <tr>
                                <th>Ã–ÄŸrenci No</th>
                                <th>Ã–ÄŸrenci AdÄ±</th>
                                <th>Puan</th>
                                <th>Derece</th>
                                <th>Ä°ÅŸlemler</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var result in group.ExamResults.OrderByDescending(r => r.Points))
                            {
                                var gradeInfo = result.Points switch
                                {
                                    >= 90 => ("A+", "success"),
                                    >= 85 => ("A", "success"),
                                    >= 80 => ("B+", "primary"),
                                    >= 75 => ("B", "primary"),
                                    >= 70 => ("C+", "warning"),
                                    >= 65 => ("C", "warning"),
                                    >= 60 => ("D+", "info"),
                                    >= 50 => ("D", "info"),
                                    _ => ("F", "danger")
                                };
                                
                                <tr>
                                    <td><span class="fw-semibold">@result.StudentNumber</span></td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="bi bi-person-circle me-2 text-primary"></i>
                                            <span>@result.StudentName</span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="progress me-3" style="width: 60px; height: 6px;">
                                                <div class="progress-bar bg-@gradeInfo.Item2" style="width: @result.Points%"></div>
                                            </div>
                                            <span class="fw-bold">@result.Points</span>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge bg-@gradeInfo.Item2 rounded-pill">@gradeInfo.Item1</span>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="EditExam" asp-route-nid="@result.Nid" class="btn btn-outline-primary btn-sm">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <form asp-action="DeleteExamResult" asp-route-nid="@result.Nid" method="post" class="d-inline" 
                                                  onsubmit="return confirm('@result.StudentName iÃ§in bu sÄ±nav sonucunu silmek istediÄŸinize emin misiniz?');">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-outline-danger btn-sm">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    @if (!Model.Any())
    {
        <!-- BoÅŸ Durum -->
        <div class="empty-state-card card shadow-sm border-0">
            <div class="card-body text-center py-5">
                <div class="empty-icon mb-3">ðŸ“‹</div>
                <h4 class="empty-title mb-2">HenÃ¼z SÄ±nav Sonucu Yok</h4>
                <p class="empty-subtitle mb-4">Ã–ÄŸrencileriniz iÃ§in ilk sÄ±nav sonucunu ekleyerek baÅŸlayÄ±n.</p>
                <a asp-action="AddExam" class="btn btn-primary btn-lg">
                    <i class="bi bi-plus-circle me-2"></i>Ä°lk Sonucu Ekle
                </a>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function exportResults() {
            alert('DÄ±ÅŸa aktarma Ã¶zelliÄŸi yakÄ±nda eklenecek');
        }
    </script>
}

@section Styles {
    <style>
        .view-exams-wrapper .card {
            background: rgba(30, 30, 46, 0.9);
            border: 1px solid rgba(255, 255, 255, 0.08) !important;
            border-radius: 16px;
            color: rgba(255, 255, 255, 0.95);
        }

        .hero-card { background: linear-gradient(135deg, rgba(99,102,241,0.15), rgba(30,30,46,0.9)); }
        .hero-icon {
            width: 64px; height: 64px; display: grid; place-items: center; font-size: 2rem;
            border-radius: 14px; background: linear-gradient(135deg, rgba(99,102,241,0.25), rgba(139,92,246,0.2));
            box-shadow: 0 10px 25px rgba(0,0,0,0.2);
        }
        .hero-title { font-weight: 800; letter-spacing: .3px; }
        .hero-subtitle { color: rgba(255, 255, 255, 0.75); }

        .stat-card { overflow: hidden; transition: transform .25s ease; }
        .stat-card:hover { transform: translateY(-4px); }
        .stat-icon { font-size: 2rem; opacity: .9; }
        .stat-value { font-size: 1.8rem; font-weight: 800; line-height: 1; }
        .stat-label { font-size: .9rem; opacity: .9; font-weight: 600; }

        .bg-gradient-primary { background: linear-gradient(45deg, #667eea 0%, #764ba2 100%); }
        .bg-gradient-success { background: linear-gradient(45deg, #56ab2f 0%, #a8e6cf 100%); }
        .bg-gradient-warning { background: linear-gradient(45deg, #f093fb 0%, #f5576c 100%); }
        .bg-gradient-info { background: linear-gradient(45deg, #4facfe 0%, #00f2fe 100%); }

        .table-gradient th { background: linear-gradient(90deg, rgba(99,102,241,.25), rgba(139,92,246,.2)); border: 0; }
        .table td, .table th { border-color: rgba(255,255,255,.06) !important; }

        .progress { background: rgba(255,255,255,.06); }

        .empty-state-card { background: rgba(17, 17, 27, 0.6) !important; }
        .empty-icon { font-size: 4rem; opacity: .7; }
        .empty-title { color: rgba(255,255,255,.9); }
        .empty-subtitle { color: rgba(255,255,255,.6); }

        @@media (max-width: 576px) {
            .hero-title { font-size: 1.6rem; }
            .hero-icon { width: 52px; height: 52px; font-size: 1.6rem; }
        }
    </style>
}