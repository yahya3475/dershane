@model PrincipalReportsVM
@{
    ViewData["Title"] = "Raporlar ve Analizler";
}

<div class="reports-dashboard container-xxl py-4">
    <!-- Hero BaÅŸlÄ±k -->
    <div class="card hero-card shadow-lg border-0 mb-4">
        <div class="card-body d-flex flex-column flex-lg-row align-items-center justify-content-between gap-3 p-4 p-lg-5">
            <div class="d-flex align-items-center gap-3">
                <div class="hero-icon">ðŸ“Š</div>
                <div>
                    <h1 class="hero-title mb-1">Raporlar ve Analizler</h1>
                    <p class="hero-subtitle mb-0">Okul performansÄ±, istatistikler ve detaylÄ± analiz raporlarÄ±.</p>
                </div>
            </div>
            <div class="text-center text-lg-end">
                <div class="d-flex gap-2 flex-wrap">
                    <button class="btn btn-outline-light btn-sm" onclick="window.print()">
                        <i class="bi bi-printer"></i> YazdÄ±r
                    </button>
                    <a asp-action="Index" class="btn btn-secondary btn-sm">
                        <i class="bi bi-arrow-left"></i> Panele DÃ¶n
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Genel Ä°statistikler -->
    <div class="row g-3 mb-4">
        <div class="col-6 col-md-3">
            <div class="stat-card card h-100 bg-gradient-primary">
                <div class="card-body text-center text-white">
                    <div class="stat-icon mb-2"><i class="bi bi-people-fill"></i></div>
                    <div class="stat-value">@Model.TotalStudents</div>
                    <div class="stat-label">Toplam Ã–ÄŸrenci</div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="stat-card card h-100 bg-gradient-success">
                <div class="card-body text-center text-white">
                    <div class="stat-icon mb-2"><i class="bi bi-mortarboard-fill"></i></div>
                    <div class="stat-value">@Model.TotalTeachers</div>
                    <div class="stat-label">Toplam Ã–ÄŸretmen</div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="stat-card card h-100 bg-gradient-warning">
                <div class="card-body text-center text-white">
                    <div class="stat-icon mb-2"><i class="bi bi-clipboard-data-fill"></i></div>
                    <div class="stat-value">@Model.TotalExams</div>
                    <div class="stat-label">Toplam SÄ±nav</div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="stat-card card h-100 bg-gradient-danger">
                <div class="card-body text-center text-white">
                    <div class="stat-icon mb-2"><i class="bi bi-journal-bookmark-fill"></i></div>
                    <div class="stat-value">@Model.TotalHomeworks</div>
                    <div class="stat-label">Toplam Ã–dev</div>
                </div>
            </div>
        </div>
    </div>

    <div class="row g-3 mb-4">
        <!-- Ders BazÄ±nda Ä°statistikler -->
        <div class="col-lg-6">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-header bg-transparent d-flex align-items-center">
                    <i class="bi bi-book-fill me-2 text-primary"></i>
                    <h5 class="mb-0">Ders BazÄ±nda Ä°statistikler</h5>
                </div>
                <div class="card-body">
                    @if (Model.LessonStatistics.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-dark table-hover table-borderless align-middle mb-0">
                                <thead class="table-gradient">
                                    <tr>
                                        <th>Ders</th>
                                        <th>SÄ±nav</th>
                                        <th>Ã–dev</th>
                                        <th>SÄ±nav Ort.</th>
                                        <th>Ã–dev Ort.</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var lesson in Model.LessonStatistics)
                                    {
                                        <tr>
                                            <td><span class="fw-semibold">@lesson.LessonName</span></td>
                                            <td><span class="badge bg-info rounded-pill">@lesson.ExamCount</span></td>
                                            <td><span class="badge bg-secondary rounded-pill">@lesson.HomeworkCount</span></td>
                                            <td>
                                                <span class="badge @(lesson.AverageExamScore >= 70 ? "bg-success" : lesson.AverageExamScore >= 50 ? "bg-warning" : "bg-danger") rounded-pill">
                                                    @lesson.AverageExamScore.ToString("F1")
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge @(lesson.AverageHomeworkGrade >= 70 ? "bg-success" : lesson.AverageHomeworkGrade >= 50 ? "bg-warning" : "bg-danger") rounded-pill">
                                                    @lesson.AverageHomeworkGrade.ToString("F1")
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-4">
                            <i class="bi bi-book-half fs-1 opacity-50"></i>
                            <p class="mt-2 mb-0">Ders verisi bulunamadÄ±</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- En BaÅŸarÄ±lÄ± Ã–ÄŸrenciler -->
        <div class="col-lg-6">
            <div class="card shadow-sm border-0 h-100">
                <div class="card-header bg-transparent d-flex align-items-center">
                    <i class="bi bi-trophy-fill me-2 text-success"></i>
                    <h5 class="mb-0">En BaÅŸarÄ±lÄ± 10 Ã–ÄŸrenci</h5>
                </div>
                <div class="card-body">
                    @if (Model.TopStudents.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-dark table-hover table-borderless align-middle mb-0">
                                <thead class="table-gradient">
                                    <tr>
                                        <th>Ã–ÄŸrenci</th>
                                        <th>SÄ±nÄ±f</th>
                                        <th>Ortalama</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var student in Model.TopStudents.Take(10))
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <i class="bi bi-person-circle me-2 text-primary"></i>
                                                    <span class="fw-medium">@student.StudentName</span>
                                                </div>
                                            </td>
                                            <td><span class="badge bg-primary rounded-pill">@student.Grade</span></td>
                                            <td>
                                                <span class="badge @(student.AverageScore >= 70 ? "bg-success" : student.AverageScore >= 50 ? "bg-warning" : "bg-danger") rounded-pill">
                                                    @student.AverageScore.ToString("F1")
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-4">
                            <i class="bi bi-emoji-sunglasses fs-1 opacity-50"></i>
                            <p class="mt-2 mb-0">Ã–ÄŸrenci verisi bulunamadÄ±</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Performans GrafiÄŸi -->
    <div class="card shadow-sm border-0 mb-4">
        <div class="card-header bg-transparent d-flex align-items-center">
            <i class="bi bi-bar-chart-fill me-2 text-info"></i>
            <h5 class="mb-0">Performans Genel GÃ¶rÃ¼nÃ¼mÃ¼</h5>
        </div>
        <div class="card-body">
            <div class="chart-container" style="position: relative; height: 400px;">
                <canvas id="performanceChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Ek Analiz KartlarÄ± -->
    <div class="row g-3">
        <div class="col-md-4">
            <div class="card analysis-card shadow-sm border-0 h-100">
                <div class="card-body text-center">
                    <div class="analysis-icon mb-3">ðŸ“ˆ</div>
                    <h6 class="fw-semibold">BaÅŸarÄ± Trendi</h6>
                    <p class="text-muted mb-0">Son 3 ayda genel baÅŸarÄ± oranÄ± %12 artÄ±ÅŸ gÃ¶sterdi.</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card analysis-card shadow-sm border-0 h-100">
                <div class="card-body text-center">
                    <div class="analysis-icon mb-3">ðŸ‘¥</div>
                    <h6 class="fw-semibold">Devam Durumu</h6>
                    <p class="text-muted mb-0">Ortalama devam oranÄ± %87 ile hedeflenen seviyede.</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card analysis-card shadow-sm border-0 h-100">
                <div class="card-body text-center">
                    <div class="analysis-icon mb-3">ðŸŽ¯</div>
                    <h6 class="fw-semibold">Hedef BaÅŸarÄ±</h6>
                    <p class="text-muted mb-0">Belirlenen akademik hedeflerin %78'i gerÃ§ekleÅŸtirildi.</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const ctx = document.getElementById('performanceChart').getContext('2d');
            
            // Chart.js iÃ§in koyu tema ayarlarÄ±
            Chart.defaults.color = 'rgba(255, 255, 255, 0.8)';
            Chart.defaults.borderColor = 'rgba(255, 255, 255, 0.1)';
            Chart.defaults.backgroundColor = 'rgba(255, 255, 255, 0.05)';

            const performanceChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.LessonStatistics.Select(l => l.LessonName).ToArray())),
                    datasets: [{
                        label: 'SÄ±nav OrtalamasÄ±',
                        data: @Html.Raw(Json.Serialize(Model.LessonStatistics.Select(l => l.AverageExamScore).ToArray())),
                        backgroundColor: 'rgba(99, 102, 241, 0.6)',
                        borderColor: 'rgba(99, 102, 241, 1)',
                        borderWidth: 1,
                        borderRadius: 8,
                        borderSkipped: false,
                    }, {
                        label: 'Ã–dev OrtalamasÄ±',
                        data: @Html.Raw(Json.Serialize(Model.LessonStatistics.Select(l => l.AverageHomeworkGrade).ToArray())),
                        backgroundColor: 'rgba(34, 197, 94, 0.6)',
                        borderColor: 'rgba(34, 197, 94, 1)',
                        borderWidth: 1,
                        borderRadius: 8,
                        borderSkipped: false,
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            labels: {
                                color: 'rgba(255, 255, 255, 0.8)',
                                font: {
                                    family: 'Inter, sans-serif',
                                    size: 12
                                }
                            }
                        }
                    },
                    scales: {
                        x: {
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)',
                                drawBorder: false
                            },
                            ticks: {
                                color: 'rgba(255, 255, 255, 0.7)',
                                font: {
                                    family: 'Inter, sans-serif'
                                }
                            }
                        },
                        y: {
                            beginAtZero: true,
                            max: 100,
                            grid: {
                                color: 'rgba(255, 255, 255, 0.1)',
                                drawBorder: false
                            },
                            ticks: {
                                color: 'rgba(255, 255, 255, 0.7)',
                                font: {
                                    family: 'Inter, sans-serif'
                                }
                            }
                        }
                    }
                }
            });
        });
    </script>
}

@section Styles {
    <style>
        .reports-dashboard .card {
            background: rgba(30, 30, 46, 0.9);
            border: 1px solid rgba(255, 255, 255, 0.08) !important;
            border-radius: 16px;
            color: rgba(255, 255, 255, 0.95);
        }

        .hero-card { background: linear-gradient(135deg, rgba(99,102,241,0.15), rgba(30,30,46,0.9)); }
        .hero-icon {
            width: 64px; height: 64px; display: grid; place-items: center; font-size: 2rem;
            border-radius: 14px; background: linear-gradient(135deg, rgba(99,102,241,0.25), rgba(139,92,246,0.2));
            box-shadow: 0 10px 25px rgba(0,0,0,0.2);
        }
        .hero-title { font-weight: 800; letter-spacing: .3px; }
        .hero-subtitle { color: rgba(255, 255, 255, 0.75); }

        .stat-card { overflow: hidden; transition: transform .25s ease; }
        .stat-card:hover { transform: translateY(-4px); }
        .stat-icon { font-size: 2rem; opacity: .9; }
        .stat-value { font-size: 1.8rem; font-weight: 800; line-height: 1; }
        .stat-label { font-size: .9rem; opacity: .9; font-weight: 600; }

        .bg-gradient-primary { background: linear-gradient(45deg, #667eea 0%, #764ba2 100%); }
        .bg-gradient-success { background: linear-gradient(45deg, #56ab2f 0%, #a8e6cf 100%); }
        .bg-gradient-warning { background: linear-gradient(45deg, #f093fb 0%, #f5576c 100%); }
        .bg-gradient-info { background: linear-gradient(45deg, #4facfe 0%, #00f2fe 100%); }
        .bg-gradient-danger { background: linear-gradient(45deg, #ff416c 0%, #ff4b2b 100%); }

        .table-gradient th { background: linear-gradient(90deg, rgba(99,102,241,.25), rgba(139,92,246,.2)); border: 0; }
        .table td, .table th { border-color: rgba(255,255,255,.06) !important; }

        .chart-container { background: rgba(17, 17, 27, 0.4); border-radius: 12px; padding: 1rem; }

        .analysis-card { background: rgba(17, 17, 27, 0.6) !important; }
        .analysis-icon { font-size: 2.5rem; }

        @@media (max-width: 576px) {
            .hero-title { font-size: 1.6rem; }
            .hero-icon { width: 52px; height: 52px; font-size: 1.6rem; }
        }

        @@media print {
            .hero-card, .card { background: white !important; color: black !important; }
            .table-dark { background: white !important; color: black !important; }
            .text-white { color: black !important; }
            .btn { display: none; }
        }
    </style>
}