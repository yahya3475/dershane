@model List<string>
@{
    ViewData["Title"] = "Classes - Principal";
}

@section Styles {
    <style>
        body {
            background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
            min-height: 100vh;
            font-family: 'Inter', sans-serif;
            color: #ffffff;
        }

        .dashboard-container {
            min-height: 100vh;
            padding: 2rem 0;
        }

        .main-card {
            background: rgba(15, 15, 35, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(255, 255, 255, 0.1);
            overflow: hidden;
        }

.card-header-custom {
    background: linear-gradient(135deg, rgba(99, 102, 241, 0.2) 0%, rgba(139, 92, 246, 0.2) 100%);
    padding: 2rem;
    border: none;
    position: relative;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.card-header-custom::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.05"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.05"/><circle cx="50" cy="10" r="0.5" fill="white" opacity="0.05"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
    opacity: 0.3;
    pointer-events: none; /* Bu satırı ekleyin - overlay'in tıklamayı engellemesini önler */
    z-index: 0; /* Z-index'i düşürün */
}

.header-content {
    position: relative;
    z-index: 2; /* Z-index'i artırın */
}

.header-actions {
    position: relative;
    z-index: 2; /* Z-index'i artırın */
}

.btn-primary {
    background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
    border: none;
    border-radius: 10px;
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(99, 102, 241, 0.3);
    color: white;
    cursor: pointer;
    text-decoration: none;
    display: inline-block;
    position: relative; /* Position ekleyin */
    z-index: 3; /* En üstte olsun */
}
        .header-content {
            position: relative;
            z-index: 1;
        }

        .page-title {
            font-size: 2.5rem;
            font-weight: 800;
            background: linear-gradient(135deg, #ffffff 0%, #e2e8f0 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 0.5rem;
            text-shadow: none;
        }

        .page-subtitle {
            font-size: 1.1rem;
            color: rgba(255, 255, 255, 0.7);
            margin-bottom: 0;
        }

        .btn-primary {
            background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
            border: none;
            border-radius: 10px;
            padding: 0.75rem 1.5rem;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(99, 102, 241, 0.3);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(99, 102, 241, 0.4);
            background: linear-gradient(135deg, #5b5ff1 0%, #8049f6 100%);
        }

        .btn-success {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            border: none;
            border-radius: 10px;
            padding: 0.75rem 1.5rem;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(16, 185, 129, 0.3);
            color: white;
        }

        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(16, 185, 129, 0.4);
            background: linear-gradient(135deg, #059669 0%, #047857 100%);
        }

        .table-container {
            background: rgba(255, 255, 255, 0.03);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 1.5rem;
            margin-top: 1.5rem;
            backdrop-filter: blur(10px);
        }

        .table {
            color: #ffffff;
            margin-bottom: 0;
        }

        .table thead th {
            background: rgba(99, 102, 241, 0.2);
            border: none;
            color: #a5b4fc;
            font-weight: 600;
            padding: 1rem;
            border-bottom: 2px solid rgba(255, 255, 255, 0.1);
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-size: 0.875rem;
        }

        .table tbody tr {
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }

        .table tbody tr:hover {
            background: rgba(255, 255, 255, 0.05);
            transform: translateX(5px);
        }

        .table tbody td {
            padding: 1rem;
            border: none;
            vertical-align: middle;
            color: rgba(255, 255, 255, 0.9);
        }

        .class-name {
            font-weight: 600;
            font-size: 1.1rem;
            color: #ffffff;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .class-icon {
            width: 40px;
            height: 40px;
            background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
        }

        .student-count-badge {
            background: linear-gradient(135deg, #10b981 0%, #059669 100%);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.875rem;
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
        }

        .teacher-info {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .teacher-avatar {
            width: 35px;
            height: 35px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1rem;
        }

        .btn-sm {
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-outline-primary {
            border: 2px solid rgba(99, 102, 241, 0.5);
            color: #a5b4fc;
            background: rgba(99, 102, 241, 0.1);
        }

        .btn-outline-primary:hover {
            background: rgba(99, 102, 241, 0.2);
            border-color: #6366f1;
            color: #ffffff;
            transform: translateY(-2px);
        }

        .btn-outline-danger {
            border: 2px solid rgba(239, 68, 68, 0.5);
            color: #fca5a5;
            background: rgba(239, 68, 68, 0.1);
        }

        .btn-outline-danger:hover {
            background: rgba(239, 68, 68, 0.2);
            border-color: #ef4444;
            color: #ffffff;
            transform: translateY(-2px);
        }

        .alert {
            border: none;
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            backdrop-filter: blur(10px);
        }

        .alert-info {
            background: rgba(59, 130, 246, 0.2);
            border: 1px solid rgba(59, 130, 246, 0.3);
            color: #93c5fd;
        }

        .empty-state {
            text-align: center;
            padding: 3rem;
            color: rgba(255, 255, 255, 0.6);
        }

        .empty-state-icon {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

        .stats-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 1.5rem;
            text-align: center;
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            background: rgba(255, 255, 255, 0.08);
            transform: translateY(-5px);
        }

        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            color: #ffffff;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .action-buttons {
            display: flex;
            gap: 0.5rem;
            align-items: center;
        }

        /* Responsive design */
        @@bmedia (max-width: 768px) {
            .dashboard-container {
                padding: 1rem 0;
            }

            .page-title {
                font-size: 2rem;
            }

            .card-header-custom {
                padding: 1.5rem;
                flex-direction: column;
                gap: 1rem;
            }

            .table-container {
                padding: 1rem;
                overflow-x: auto;
            }

            .stats-row {
                grid-template-columns: 1fr;
            }

            .action-buttons {
                flex-direction: column;
                width: 100%;
            }

            .btn-sm {
                width: 100%;
                margin-bottom: 0.25rem;
            }
        }

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: rgba(255, 255, 255, 0.2);
        }
    </style>
}
    <div class="container-fluid">
        <div class="main-card">
            <div class="card-header-custom d-flex justify-content-between align-items-center">
                <div class="header-content">
                    <h2 class="page-title">
                        <i class="bi bi-diagram-3-fill me-2"></i>
                        Sınıf Yönetimi
                    </h2>
                    <p class="page-subtitle">Okuldaki tüm sınıfları yönetin ve düzenleyin</p>
                </div>
                <div class="header-actions">
                    <a asp-action="CreateClass" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-2"></i>Yeni Sınıf Ekle
                    </a>
                </div>
            </div>

            <div class="card-body p-0">
                <!-- İstatistik Kartları -->
                <div class="stats-row p-4">
                    <div class="stat-card">
                        <div class="stat-number">@Model.Count</div>
                        <div class="stat-label">Toplam Sınıf</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">@(ViewBag.TotalStudents ?? 0)</div>
                        <div class="stat-label">Toplam Öğrenci</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">@(ViewBag.TotalTeachers ?? 0)</div>
                        <div class="stat-label">Aktif Öğretmen</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-number">@(ViewBag.AverageClassSize ?? 0)</div>
                        <div class="stat-label">Ortalama Sınıf Mevcudu</div>
                    </div>
                </div>

                @if (Model.Any())
                {
                    <div class="table-container mx-4 mb-4">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Sınıf Adı</th>
                                        <th>Öğrenci Sayısı</th>
                                        <th>Sınıf Öğretmeni</th>
                                        <th>İşlemler</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var cls in Model)
                                    {
                                        var studentCount = (ViewBag.ClassStudentCount != null &&
                                        ViewBag.ClassStudentCount.ContainsKey(cls)) ? ViewBag.ClassStudentCount[cls] : 0;
                                        var teacher = (ViewBag.ClassTeachers != null && ViewBag.ClassTeachers.ContainsKey(cls))
                                        ? ViewBag.ClassTeachers[cls] : "Atanmamış";

                                        <tr>
                                            <td>
                                                <div class="class-name">
                                                    <div class="class-icon">
                                                        @cls.Substring(0, Math.Min(2, cls.Length)).ToUpper()
                                                    </div>
                                                    <div>
                                                        <strong>@cls</strong>
                                                        <br>
                                                        <small class="text-muted">Sınıf Kodu: @cls.Replace(" ",
                                                                                                                "").ToUpper()</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="student-count-badge">
                                            <i class="bi bi-people-fill"></i>
                                            @studentCount Öğrenci
                                        </span>
                                    </td>
                                    <td>
                                        <div class="teacher-info">
                                            <div class="teacher-avatar">
                                                @if (teacher != "Atanmamış")
                                                        {
                                                            @teacher.Substring(0, Math.Min(2, teacher.Length)).ToUpper()
                                                        }
                                                        else
                                                        {
                                                            <i class="bi bi-person-x"></i>
                                                        }
                                                    </div>
                                                    <div>
                                                        <strong>@teacher</strong>
                                                        @if (teacher != "Atanmamış")
                                                        {
                                                            <br>

                                                            <small class="text-muted">Sınıf Öğretmeni</small>
                                                        }
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="action-buttons">
                                                    <a asp-action="ViewClassDetails" asp-route-className="@cls"
                                                        class="btn btn-sm btn-outline-primary" title="Sınıf Detayları">
                                                        <i class="bi bi-eye"></i>
                                                    </a>
                                                    <a asp-action="EditClass" asp-route-className="@cls"
                                                        class="btn btn-sm btn-outline-primary" title="Düzenle">
                                                        <i class="bi bi-pencil"></i>
                                                    </a>
                                                    <form asp-action="DeleteClass" asp-route-className="@cls" method="post"
                                                        style="display:inline;"
                                                        onsubmit="return confirm('Bu sınıfı silmek istediğinizden emin misiniz? Bu işlem geri alınamaz.');">
                                                        @Html.AntiForgeryToken()
                                                        <button type="submit" class="btn btn-sm btn-outline-danger" title="Sil">
                                                            <i class="bi bi-trash"></i>
                                                        </button>
                                                    </form>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
                else
                {
                    <div class="empty-state">
                        <div class="empty-state-icon">
                            <i class="bi bi-building"></i>
                        </div>
                        <h4>Henüz Sınıf Bulunmuyor</h4>
                        <p>Sisteme ilk sınıfınızı ekleyerek başlayın.</p>
                        <a asp-action="AddUser" class="btn btn-primary mt-3">
                            <i class="bi bi-plus-circle me-2"></i>İlk Sınıfı Ekle
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Sınıf silme onayı için gelişmiş modal
        function confirmDelete(className) {
            return confirm(`"${className}" sınıfını silmek istediğinizden emin misiniz?\n\nBu işlem:\n- Sınıftaki tüm öğrenci kayıtlarını etkileyebilir\n- Geri alınamaz\n\nDevam etmek istiyor musunuz?`);
        }

        // Sayfa yüklendiğinde animasyonlar
        document.addEventListener('DOMContentLoaded', function () {
            // Stat kartlarına animasyon ekle
            const statCards = document.querySelectorAll('.stat-card');
            statCards.forEach((card, index) => {
                setTimeout(() => {
                    card.style.opacity = '0';
                    card.style.transform = 'translateY(20px)';
                    card.style.transition = 'all 0.5s ease';

                    setTimeout(() => {
                        card.style.opacity = '1';
                        card.style.transform = 'translateY(0)';
                    }, 100);
                }, index * 100);
            });

            // Tablo satırlarına animasyon ekle
            const tableRows = document.querySelectorAll('tbody tr');
            tableRows.forEach((row, index) => {
                setTimeout(() => {
                    row.style.opacity = '0';
                    row.style.transform = 'translateX(-20px)';
                    row.style.transition = 'all 0.5s ease';

                    setTimeout(() => {
                        row.style.opacity = '1';
                        row.style.transform = 'translateX(0)';
                    }, 100);
                }, index * 50);
            });
        });

        // Arama fonksiyonu (gelecekte eklenebilir)
        function searchClasses() {
            // Arama fonksiyonu implementasyonu
        }

        // Excel export fonksiyonu (gelecekte eklenebilir)
        function exportToExcel() {
            // Excel export implementasyonu
        }
    </script>
}