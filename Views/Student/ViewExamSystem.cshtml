@model dershane.ViewModels.StudentExamSystemVM

@{
    ViewData["Title"] = "Exam System";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary">üéØ Available Exams</h2>
        <div class="exam-stats">
            <span class="badge bg-success me-2">@Model.Exams.Count(e => e.IsCompleted) Completed</span>
            <span class="badge bg-warning">@Model.Exams.Count(e => !e.IsCompleted && e.CanTake) Available</span>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>@TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>@TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (Model.Exams.Any())
    {
        <div class="row">
            @foreach (var exam in Model.Exams)
            {
                var isUpcoming = exam.ExamDate > DateTime.Now;
                var isActive = exam.ExamDate <= DateTime.Now && exam.ExamDate.AddMinutes(exam.Duration) > DateTime.Now;
                var isExpired = exam.ExamDate.AddMinutes(exam.Duration) <= DateTime.Now;
                
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100 shadow-sm border-0 exam-card">
                        <div class="card-header 
                            @(exam.IsCompleted ? "bg-success" : 
                              isActive ? "bg-warning" : 
                              isUpcoming ? "bg-info" : "bg-secondary") text-white">
                            <div class="d-flex justify-content-between align-items-center">
                                <h6 class="card-title mb-0">üìù @exam.Title</h6>
                                @if (exam.IsCompleted)
                                {
                                    <span class="badge bg-light text-dark">‚úÖ Completed</span>
                                }
                                else if (isActive)
                                {
                                    <span class="badge bg-danger blink">üî¥ LIVE</span>
                                }
                                else if (isUpcoming)
                                {
                                    <span class="badge bg-light text-dark">‚è∞ Upcoming</span>
                                                                    }
                                else
                                {
                                    <span class="badge bg-light text-dark">‚è∞ Expired</span>
                                }
                            </div>
                            <small class="opacity-75">üìö @exam.Lesson</small>
                        </div>
                        
                        <div class="card-body">
                            <p class="card-text text-muted">@exam.Description</p>
                            
                            <div class="exam-info mb-3">
                                <div class="row text-center">
                                    <div class="col-4">
                                        <div class="info-item">
                                            <h6 class="text-primary mb-0">@exam.QuestionCount</h6>
                                            <small class="text-muted">Questions</small>
                                        </div>
                                    </div>
                                    <div class="col-4">
                                        <div class="info-item">
                                            <h6 class="text-warning mb-0">@exam.Duration</h6>
                                            <small class="text-muted">Minutes</small>
                                        </div>
                                    </div>
                                    <div class="col-4">
                                        <div class="info-item">
                                            <h6 class="text-info mb-0">@exam.TotalPoints</h6>
                                            <small class="text-muted">Points</small>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="exam-schedule mb-3">
                                <small class="text-muted">
                                    <i class="bi bi-calendar"></i> <strong>Date:</strong> @exam.ExamDate.ToString("dd/MM/yyyy")<br>
                                    <i class="bi bi-clock"></i> <strong>Time:</strong> @exam.ExamDate.ToString("HH:mm") - @exam.ExamDate.AddMinutes(exam.Duration).ToString("HH:mm")
                                </small>
                            </div>

                            @if (exam.IsCompleted && exam.Score.HasValue)
                            {
                                var percentage = exam.TotalPoints > 0 ? (exam.Score.Value * 100.0 / exam.TotalPoints) : 0;
                                var gradeClass = percentage >= 85 ? "success" : percentage >= 70 ? "warning" : percentage >= 50 ? "info" : "danger";
                                
                                <div class="alert alert-@gradeClass alert-sm">
                                    <div class="d-flex justify-content-between">
                                        <span><strong>Your Score:</strong></span>
                                        <span><strong>@exam.Score / @exam.TotalPoints (@percentage.ToString("F1")%)</strong></span>
                                    </div>
                                </div>
                            }
                            else if (exam.CanTake)
                            {
                                <div class="alert alert-success alert-sm">
                                    <i class="bi bi-play-circle"></i> <strong>Ready to take!</strong>
                                </div>
                            }
                            else if (isUpcoming)
                            {
                                var timeUntilExam = exam.ExamDate - DateTime.Now;
                                <div class="alert alert-info alert-sm">
                                    <i class="bi bi-hourglass-split"></i> 
                                    <strong>Starts in:</strong> @timeUntilExam.Days days, @timeUntilExam.Hours hours
                                </div>
                            }
                            else if (isExpired && !exam.IsCompleted)
                            {
                                <div class="alert alert-danger alert-sm">
                                    <i class="bi bi-x-circle"></i> <strong>Missed!</strong> Time expired
                                </div>
                            }
                        </div>
                        
                        <div class="card-footer bg-transparent">
                            @if (exam.IsCompleted)
                            {
                                <a asp-action="ExamResult" asp-route-examId="@exam.Id" 
                                   class="btn btn-success w-100">
                                    <i class="bi bi-bar-chart"></i> View Result
                                </a>
                            }
                            else if (exam.CanTake)
                            {
                                <a asp-action="TakeExam" asp-route-examId="@exam.Id" 
                                   class="btn btn-warning w-100 btn-pulse">
                                    <i class="bi bi-play-fill"></i> Take Exam Now!
                                </a>
                            }
                            else if (isUpcoming)
                            {
                                <button class="btn btn-secondary w-100" disabled>
                                    <i class="bi bi-clock"></i> Not Started Yet
                                </button>
                            }
                            else
                            {
                                <button class="btn btn-secondary w-100" disabled>
                                    <i class="bi bi-x-circle"></i> Unavailable
                                </button>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center py-5">
            <div class="empty-state">
                <i class="bi bi-clipboard-x display-1 text-muted"></i>
                <h4 class="text-muted mt-3">No Exams Available</h4>
                <p class="text-muted">Your teacher hasn't created any exams yet. Check back later! üìö</p>
            </div>
        </div>
    }
</div>

<style>
.exam-card {
    transition: all 0.3s ease;
}

.exam-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
}

.info-item {
    padding: 8px;
}

.info-item h6 {
    font-size: 1.1rem;
    font-weight: bold;
}

.alert-sm {
    padding: 8px 12px;
    margin-bottom: 0;
}

.btn-pulse {
    animation: pulse 2s infinite;
}

@@keyframes pulse {
    0% {
        box-shadow: 0 0 0 0 rgba(255, 193, 7, 0.7);
    }
    70% {
        box-shadow: 0 0 0 10px rgba(255, 193, 7, 0);
    }
    100% {
        box-shadow: 0 0 0 0 rgba(255, 193, 7, 0);
    }
}

.blink {
    animation: blink 1s infinite;
}

@@keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0.5; }
}
</style>