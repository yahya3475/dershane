@model dershane.Models.StudentExamResult

@{
    ViewData["Title"] = "Sƒ±nav Sonucu";
    var exam = Model.Exam;
    var totalPoints = exam.Questions.Sum(q => q.Points);
    var percentage = totalPoints > 0 ? (Model.Score * 100.0 / totalPoints) : 0;
    var gradeClass = percentage >= 85 ? "excellent" : percentage >= 70 ? "good" : percentage >= 50 ? "average" : "poor";
    var gradeEmoji = percentage >= 85 ? "üèÜ" : percentage >= 70 ? "üëç" : percentage >= 50 ? "üìö" : "üí™";
    var gradeText = percentage >= 85 ? "M√ºkemmel!" : percentage >= 70 ? "ƒ∞yi!" : percentage >= 50 ? "Orta" : "Geli≈ütirilmeli";
    
    // Parse student answers
    var studentAnswers = new Dictionary<int, string>();
    if (!string.IsNullOrEmpty(Model.Answers))
    {
        try
        {
            studentAnswers = System.Text.Json.JsonSerializer.Deserialize<Dictionary<int, string>>(Model.Answers);
        }
        catch
        {
            studentAnswers = new Dictionary<int, string>();
        }
    }
    
    var correctCount = exam.Questions.Count(q => studentAnswers.ContainsKey(q.Id) && studentAnswers[q.Id] == q.CorrectAnswer);
    var incorrectCount = exam.Questions.Count - correctCount;
    var duration = Model.EndTime.HasValue ? (Model.EndTime.Value - Model.StartTime).TotalMinutes : 0;
}

@section Styles {
    <style>
        /* Modern Exam Result Styles */
        body {
            background: linear-gradient(135deg, #1e1e2e 0%, #2d3748 100%);
            color: #ffffff;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            min-height: 100vh;
        }

        .page-header {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .page-title {
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(135deg, #6366f1, #8b5cf6);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 0.5rem;
        }

        .page-subtitle {
            color: rgba(255, 255, 255, 0.7);
            font-size: 1.1rem;
            margin: 0;
        }

        .btn-modern {
            border-radius: 12px;
            padding: 0.75rem 1.5rem;
            font-weight: 600;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: #ffffff;
            backdrop-filter: blur(10px);
        }

        .btn-modern:hover {
            background: rgba(255, 255, 255, 0.2);
            border-color: rgba(255, 255, 255, 0.3);
            color: #ffffff;
            transform: translateY(-2px);
        }

        .btn-modern.btn-secondary {
            background: rgba(108, 117, 125, 0.2);
            border-color: rgba(108, 117, 125, 0.3);
        }

        .btn-modern.btn-outline-primary {
            background: rgba(99, 102, 241, 0.1);
            border-color: rgba(99, 102, 241, 0.3);
            color: #6366f1;
        }

        .btn-modern.btn-outline-primary:hover {
            background: rgba(99, 102, 241, 0.2);
            color: #6366f1;
        }

        /* Result Card */
        .result-card-modern {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 24px;
            overflow: hidden;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        }

        .result-header {
            padding: 3rem 2rem;
            display: flex;
            align-items: center;
            gap: 2rem;
            position: relative;
            overflow: hidden;
        }

        .result-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            opacity: 0.1;
            z-index: 0;
        }

        .result-header.excellent::before {
            background: linear-gradient(135deg, #10b981, #059669);
        }

        .result-header.good::before {
            background: linear-gradient(135deg, #3b82f6, #1d4ed8);
        }

        .result-header.average::before {
            background: linear-gradient(135deg, #f59e0b, #d97706);
        }

        .result-header.poor::before {
            background: linear-gradient(135deg, #ef4444, #dc2626);
        }

        .score-circle-large {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            position: relative;
            z-index: 1;
            background: rgba(255, 255, 255, 0.1);
            border: 3px solid rgba(255, 255, 255, 0.2);
        }

        .score-percentage {
            font-size: 2rem;
            font-weight: 800;
            color: #ffffff;
            line-height: 1;
        }

        .score-emoji {
            font-size: 1.5rem;
            margin-top: 0.25rem;
        }

        .score-details {
            flex: 1;
            position: relative;
            z-index: 1;
        }

        .score-title {
            font-size: 2.5rem;
            font-weight: 800;
            margin-bottom: 0.5rem;
            color: #ffffff;
        }

        .score-points {
            font-size: 1.25rem;
            color: rgba(255, 255, 255, 0.8);
            margin-bottom: 1rem;
        }

        .grade-badge {
            display: inline-block;
            padding: 0.75rem 1.5rem;
            border-radius: 50px;
            font-weight: 600;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .grade-badge.excellent {
            background: rgba(16, 185, 129, 0.2);
            color: #10b981;
            border: 1px solid rgba(16, 185, 129, 0.3);
        }

        .grade-badge.good {
            background: rgba(59, 130, 246, 0.2);
            color: #3b82f6;
            border: 1px solid rgba(59, 130, 246, 0.3);
        }

        .grade-badge.average {
            background: rgba(245, 158, 11, 0.2);
            color: #f59e0b;
            border: 1px solid rgba(245, 158, 11, 0.3);
        }

        .grade-badge.poor {
            background: rgba(239, 68, 68, 0.2);
            color: #ef4444;
            border: 1px solid rgba(239, 68, 68, 0.3);
        }

        /* Stats Grid */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
        }

        .stat-card-modern {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 16px;
            padding: 1.5rem;
            display: flex;
            align-items: center;
            gap: 1rem;
            transition: all 0.3s ease;
        }

        .stat-card-modern:hover {
            background: rgba(255, 255, 255, 0.08);
            transform: translateY(-2px);
        }

        .stat-icon {
            width: 50px;
            height: 50px;
            border-radius: 12px;
            background: rgba(99, 102, 241, 0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6366f1;
            font-size: 1.25rem;
        }

        .stat-content h4 {
            font-size: 1.25rem;
            font-weight: 700;
            margin-bottom: 0.25rem;
            color: #ffffff;
        }

        .stat-content p {
            color: rgba(255, 255, 255, 0.6);
            margin: 0;
            font-size: 0.9rem;
        }

        /* Exam Details Card */
        .exam-details-card {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            overflow: hidden;
        }

        .card-header-modern {
            background: rgba(255, 255, 255, 0.05);
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            padding: 1.5rem 2rem;
        }

        .card-header-modern h5 {
            margin: 0;
                        margin: 0;
            font-size: 1.25rem;
            font-weight: 600;
            color: #ffffff;
        }

        .card-body-modern {
            padding: 2rem;
        }

        .detail-item {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .detail-item i {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(99, 102, 241, 0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6366f1;
            font-size: 1rem;
        }

        .detail-item div {
            flex: 1;
        }

        .detail-item strong {
            display: block;
            color: #ffffff;
            font-weight: 600;
            margin-bottom: 0.25rem;
        }

        .detail-item span {
            color: rgba(255, 255, 255, 0.7);
            font-size: 0.9rem;
        }

        /* Question Analysis */
        .question-analysis {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 16px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            transition: all 0.3s ease;
        }

        .question-analysis:hover {
            background: rgba(255, 255, 255, 0.08);
        }

        .question-analysis.correct {
            border-color: rgba(16, 185, 129, 0.3);
            background: rgba(16, 185, 129, 0.05);
        }

        .question-analysis.incorrect {
            border-color: rgba(239, 68, 68, 0.3);
            background: rgba(239, 68, 68, 0.05);
        }

        .question-analysis.unanswered {
            border-color: rgba(245, 158, 11, 0.3);
            background: rgba(245, 158, 11, 0.05);
        }

        .question-header {
            display: flex;
            justify-content: between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .question-number {
            font-weight: 700;
            color: #6366f1;
            font-size: 1.1rem;
        }

        .answer-status {
            display: flex;
            gap: 0.5rem;
        }

        .status-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .status-badge.correct {
            background: rgba(16, 185, 129, 0.2);
            color: #10b981;
        }

        .status-badge.incorrect {
            background: rgba(239, 68, 68, 0.2);
            color: #ef4444;
        }

        .status-badge.unanswered {
            background: rgba(245, 158, 11, 0.2);
            color: #f59e0b;
        }

        .question-text {
            color: #ffffff;
            font-weight: 600;
            margin-bottom: 1rem;
            line-height: 1.5;
        }

        .options-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 0.75rem;
        }

        .option-item {
            padding: 0.75rem;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }

        .option-item.correct {
            background: rgba(16, 185, 129, 0.1);
            border-color: rgba(16, 185, 129, 0.3);
            color: #10b981;
        }

        .option-item.student-answer {
            background: rgba(99, 102, 241, 0.1);
            border-color: rgba(99, 102, 241, 0.3);
            color: #6366f1;
        }

        .option-item.student-wrong {
            background: rgba(239, 68, 68, 0.1);
            border-color: rgba(239, 68, 68, 0.3);
            color: #ef4444;
        }

        .option-label {
            font-weight: 700;
            margin-right: 0.5rem;
        }

        .option-badges {
            margin-top: 0.5rem;
            display: flex;
            gap: 0.5rem;
            flex-wrap: wrap;
        }

        .option-badge {
            padding: 0.125rem 0.5rem;
            border-radius: 12px;
            font-size: 0.7rem;
            font-weight: 600;
        }

        .option-badge.student {
            background: rgba(99, 102, 241, 0.2);
            color: #6366f1;
        }

        .option-badge.correct-answer {
            background: rgba(16, 185, 129, 0.2);
            color: #10b981;
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .result-header {
                flex-direction: column;
                text-align: center;
                gap: 1.5rem;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }

            .options-grid {
                grid-template-columns: 1fr;
            }

            .page-title {
                font-size: 2rem;
            }

            .score-title {
                font-size: 2rem;
            }
        }
    </style>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <!-- Header Section -->
            <div class="page-header">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h1 class="page-title">
                            <i class="bi bi-clipboard-check me-2"></i>
                            Sƒ±nav Sonucu
                        </h1>
                        <p class="page-subtitle">@exam.Title - @exam.Lesson</p>
                    </div>
                    <div>
                        <a asp-action="ViewExamSystem" class="btn btn-modern btn-secondary me-2">
                            <i class="bi bi-arrow-left"></i>
                            Sƒ±navlara D√∂n
                        </a>
                        <button onclick="window.print()" class="btn btn-modern btn-outline-primary">
                            <i class="bi bi-printer"></i>
                            Yazdƒ±r
                        </button>
                    </div>
                </div>
            </div>

            <!-- Main Result Card -->
            <div class="result-card-modern mb-4">
                <div class="result-header @gradeClass">
                    <div class="score-circle-large">
                        <div class="score-percentage">@percentage.ToString("F0")%</div>
                        <div class="score-emoji">@gradeEmoji</div>
                    </div>
                    <div class="score-details">
                        <h1 class="score-title">@gradeText</h1>
                        <div class="score-points">@Model.Score / @totalPoints Puan</div>
                        <span class="grade-badge @gradeClass">@gradeText</span>
                    </div>
                </div>
            </div>

            <!-- Statistics Grid -->
            <div class="stats-grid mb-4">
                <div class="stat-card-modern">
                    <div class="stat-icon">
                        <i class="bi bi-check-circle"></i>
                    </div>
                    <div class="stat-content">
                        <h4>@correctCount</h4>
                        <p>Doƒüru Cevap</p>
                    </div>
                </div>

                <div class="stat-card-modern">
                    <div class="stat-icon">
                        <i class="bi bi-x-circle"></i>
                    </div>
                    <div class="stat-content">
                        <h4>@incorrectCount</h4>
                        <p>Yanlƒ±≈ü Cevap</p>
                    </div>
                </div>

                <div class="stat-card-modern">
                    <div class="stat-icon">
                        <i class="bi bi-stopwatch"></i>
                    </div>
                    <div class="stat-content">
                        <h4>@duration.ToString("F0")</h4>
                        <p>Dakika S√ºre</p>
                    </div>
                </div>

                <div class="stat-card-modern">
                    <div class="stat-icon">
                        <i class="bi bi-question-circle"></i>
                    </div>
                    <div class="stat-content">
                        <h4>@exam.Questions.Count</h4>
                        <p>Toplam Soru</p>
                    </div>
                </div>
            </div>

            <div class="row">
                <!-- Exam Details -->
                <div class="col-lg-4 mb-4">
                    <div class="exam-details-card">
                        <div class="card-header-modern">
                            <h5><i class="bi bi-info-circle me-2"></i>Sƒ±nav Detaylarƒ±</h5>
                        </div>
                        <div class="card-body-modern">
                            <div class="detail-item">
                                <i class="bi bi-book"></i>
                                <div>
                                    <strong>Sƒ±nav Adƒ±</strong>
                                    <span>@exam.Title</span>
                                </div>
                            </div>

                            <div class="detail-item">
                                <i class="bi bi-journal-bookmark"></i>
                                <div>
                                    <strong>Ders</strong>
                                    <span>@exam.Lesson</span>
                                </div>
                            </div>

                            <div class="detail-item">
                                <i class="bi bi-calendar"></i>
                                <div>
                                    <strong>Sƒ±nav Tarihi</strong>
                                    <span>@exam.ExamDate.ToString("dd/MM/yyyy HH:mm")</span>
                                </div>
                            </div>

                            <div class="detail-item">
                                <i class="bi bi-play-circle"></i>
                                <div>
                                    <strong>Ba≈ülama Saati</strong>
                                    <span>@Model.StartTime.ToString("dd/MM/yyyy HH:mm")</span>
                                </div>
                            </div>

                            <div class="detail-item">
                                <i class="bi bi-stop-circle"></i>
                                <div>
                                    <strong>Biti≈ü Saati</strong>
                                    <span>@(Model.EndTime?.ToString("dd/MM/yyyy HH:mm") ?? "Devam ediyor")</span>
                                </div>
                            </div>

                            <div class="detail-item">
                                <i class="bi bi-clock"></i>
                                <div>
                                    <strong>S√ºre (Dakika)</strong>
                                    <span>@exam.Duration </span>
                                    <span class="text-muted">(Dakika)</span>
                                      </div>
                            </div>

                            <div class="detail-item">
                                <i class="bi bi-trophy"></i>
                                <div>
                                    <strong>Toplam Puan</strong>
                                    <span>@totalPoints Puan</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Question Analysis -->
                <div class="col-lg-8">
                    <div class="exam-details-card">
                        <div class="card-header-modern">
                            <h5><i class="bi bi-list-check me-2"></i>Soru Analizi</h5>
                        </div>
                        <div class="card-body-modern">
                            @for (int i = 0; i < exam.Questions.Count; i++)
                            {
                                var question = exam.Questions.OrderBy(q => q.QuestionOrder).ElementAt(i);
                                var studentAnswer = studentAnswers.ContainsKey(question.Id) ? studentAnswers[question.Id] : "";
                                var isCorrect = studentAnswer == question.CorrectAnswer;
                                var wasAnswered = !string.IsNullOrEmpty(studentAnswer);
                                var analysisClass = isCorrect ? "correct" : wasAnswered ? "incorrect" : "unanswered";
                                
                                <div class="question-analysis @analysisClass">
                                    <div class="question-header">
                                        <div class="question-number">Soru @(i + 1)</div>
                                        <div class="answer-status">
                                            @if (isCorrect)
                                            {
                                                <span class="status-badge correct">
                                                    <i class="bi bi-check-circle"></i> Doƒüru (+@question.Points puan)
                                                </span>
                                            }
                                            else if (wasAnswered)
                                            {
                                                <span class="status-badge incorrect">
                                                    <i class="bi bi-x-circle"></i> Yanlƒ±≈ü (0 puan)
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="status-badge unanswered">
                                                    <i class="bi bi-dash-circle"></i> Cevaplanmadƒ± (0 puan)
                                                </span>
                                            }
                                        </div>
                                    </div>
                                    
                                    <div class="question-text">@question.QuestionText</div>
                                    
                                    <div class="options-grid">
                                        <div class="option-item @(question.CorrectAnswer == "A" ? "correct" : "") @(studentAnswer == "A" && !isCorrect ? "student-wrong" : "") @(studentAnswer == "A" && isCorrect ? "student-answer" : "")">
                                            <span class="option-label">A)</span> @question.OptionA
                                            <div class="option-badges">
                                                @if (studentAnswer == "A")
                                                {
                                                    <span class="option-badge student">Cevabƒ±nƒ±z</span>
                                                }
                                                @if (question.CorrectAnswer == "A")
                                                {
                                                    <span class="option-badge correct-answer">Doƒüru Cevap</span>
                                                }
                                            </div>
                                        </div>
                                        
                                        <div class="option-item @(question.CorrectAnswer == "B" ? "correct" : "") @(studentAnswer == "B" && !isCorrect ? "student-wrong" : "") @(studentAnswer == "B" && isCorrect ? "student-answer" : "")">
                                            <span class="option-label">B)</span> @question.OptionB
                                            <div class="option-badges">
                                                @if (studentAnswer == "B")
                                                {
                                                    <span class="option-badge student">Cevabƒ±nƒ±z</span>
                                                }
                                                @if (question.CorrectAnswer == "B")
                                                {
                                                    <span class="option-badge correct-answer">Doƒüru Cevap</span>
                                                }
                                            </div>
                                        </div>
                                        
                                        <div class="option-item @(question.CorrectAnswer == "C" ? "correct" : "") @(studentAnswer == "C" && !isCorrect ? "student-wrong" : "") @(studentAnswer == "C" && isCorrect ? "student-answer" : "")">
                                            <span class="option-label">C)</span> @question.OptionC
                                            <div class="option-badges">
                                                @if (studentAnswer == "C")
                                                {
                                                    <span class="option-badge student">Cevabƒ±nƒ±z</span>
                                                }
                                                @if (question.CorrectAnswer == "C")
                                                {
                                                    <span class="option-badge correct-answer">Doƒüru Cevap</span>
                                                }
                                            </div>
                                        </div>
                                        
                                        <div class="option-item @(question.CorrectAnswer == "D" ? "correct" : "") @(studentAnswer == "D" && !isCorrect ? "student-wrong" : "") @(studentAnswer == "D" && isCorrect ? "student-answer" : "")">
                                            <span class="option-label">D)</span> @question.OptionD
                                            <div class="option-badges">
                                                @if (studentAnswer == "D")
                                                {
                                                    <span class="option-badge student">Cevabƒ±nƒ±z</span>
                                                }
                                                @if (question.CorrectAnswer == "D")
                                                {
                                                    <span class="option-badge correct-answer">Doƒüru Cevap</span>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Print functionality
    window.addEventListener('beforeprint', function() {
        document.body.classList.add('printing');
    });
    
    window.addEventListener('afterprint', function() {
        document.body.classList.remove('printing');
    });
    
    // Add print styles
    const printStyles = `
        @@media print {
            body {
                background: white !important;
                color: black !important;
            }
            
            .page-header,
            .result-card-modern,
            .stat-card-modern,
            .exam-details-card,
            .question-analysis {
                background: white !important;
                border: 1px solid #ddd !important;
                box-shadow: none !important;
            }
            
            .btn {
                display: none !important;
            }
            
            .page-title,
            .score-title,
            .question-text {
                color: black !important;
            }
            
            .detail-item strong,
            .stat-content h4 {
                color: black !important;
            }
            
            .option-item {
                border: 1px solid #ddd !important;
                background: white !important;
            }
            
            .option-item.correct {
                background: #f0f9ff !important;
                border-color: #10b981 !important;
            }
            
            .option-item.student-wrong {
                background: #fef2f2 !important;
                border-color: #ef4444 !important;
            }
        }
    `;
    
    const styleSheet = document.createElement('style');
    styleSheet.textContent = printStyles;
    document.head.appendChild(styleSheet);
</script>
